/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Perform a value into a percentage value.
 * @param {number} $value - The value which should be converted.
 * @returns {number} $value - The percentage.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Aliases for j-column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Aliases for j-column-width().
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Alias for j-column-gutter().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Alias for j-span().
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Alias for j-shift().
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * Alias for j-unshift().
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 * Aliases for j-edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Alias for j-center().
 */
/**
 * Uncenter an element.
 */
/**
 * Alias for j-uncenter().
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Alias for j-stack().
 */
/**
 * Unstack an element.
 */
/**
 * Alias for j-unstack().
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Alias for j-align().
 */
/**
 * Apply a clearfix to an element.
 */
/**
 * Alias for j-cf().
 */
/* Mixins */
/* Browser Resets */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: Lato, Helvetica, sans-serif;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1;
  display: block;
  overflow: auto; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* Basic Styles */
h1, h2, h3, h4 {
  font-family: Lato, Helvetica, sans-serif;
  color: black;
  margin: 5px 0; }

h1 {
  font-size: 36px; }

h2 {
  font-size: 24px;
  font-weight: 400; }

h3 {
  font-size: 18px;
  font-weight: 300; }

h4 {
  font-size: 14px;
  font-weight: 300; }

p {
  font-family: Lato, Helvetica, sans-serif;
  margin: 10px 10px 0; }

a {
  text-decoration: none;
  color: #546e7a; }

a:hover {
  color: #37474f; }

.de-emphasize {
  font-family: inherit;
  font-size: 12px;
  color: #7F7F7F; }

button {
  border: 1px solid #000;
  background-color: #fff;
  padding: 5px;
  font-size: 14px;
  font-family: Lato, Helvetica, sans-serif; }
  button :hover {
    background-color: #000;
    color: #fff; }

.alert {
  padding: 5px 5px 5px 10px; }

.alert-reminder {
  background-color: #E8F7FF;
  border-left: 4px solid #BFE6FF; }

.right {
  float: right; }

.left {
  float: left; }

.page-wrapper {
  width: 100%;
  position: relative;
  overflow: auto; }

.content-wrapper {
  width: auto;
  max-width: 1100px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 10px;
  padding-right: 10px;
  position: relative;
  overflow: auto;
  display: block;
  padding-bottom: 50px; }

.divider-line {
  width: auto;
  max-width: 95%;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  border-bottom: 2px solid #EFEFEF;
  margin: 10px auto; }

.divider-line-full {
  width: 100%;
  border-bottom: 2px solid #EFEFEF;
  margin: 10px auto; }

.vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%); }

header {
  width: 100%;
  top: 0; }
  header .nav-wrapper {
    display: block;
    height: 60px;
    font-family: Lato, sans-serif; }
    header .nav-wrapper #business-title {
      float: left;
      font-size: 24px;
      margin: 20px 20px; }
  header nav {
    font-size: 16px;
    font-family: Lato, sans-serif;
    font-weight: 300;
    margin: 23px 20px; }
  header .primary-nav {
    float: right;
    padding-top: 3px; }
    header .primary-nav a {
      margin-left: 10px; }
    header .primary-nav .search {
      color: #CCCCCC; }

.img-div {
  width: 100%;
  margin: 0 auto;
  display: block;
  height: 400px;
  overflow: hidden; }
  .img-div img {
    width: 100%;
    top: -90px;
    position: relative;
    opacity: .8; }

.main-content {
  width: auto;
  max-width: 95%;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  height: 100%;
  margin: 10px auto;
  padding: 10px;
  display: block;
  overflow: auto;
  font: Lato, Helvetica, sans-serif; }
  .main-content .call-to-action {
    width: auto;
    max-width: 500px;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
    margin: 20px auto;
    text-align: center; }
    .main-content .call-to-action nav {
      font-size: 24px;
      font-family: Lato, sans-serif; }
      .main-content .call-to-action nav a {
        margin: 0 10px; }

.section {
  padding-top: 20px;
  display: block; }

.section-large {
  float: left;
  clear: none;
  width: 74.25%;
  margin-left: 0;
  margin-right: 3%; }
  .section-large:last-child {
    margin-right: 0; }

.section-small {
  float: left;
  clear: none;
  width: 15.2%;
  margin-left: 0;
  margin-right: 6%; }
  .section-small:last-child {
    margin-right: 0; }

.post {
  max-height: 300px;
  width: 100%;
  padding-bottom: 20px;
  margin-left: 10px;
  margin-bottom: 20px;
  display: block;
  overflow: auto;
  line-height: 20px; }
  .post p {
    margin: 5px;
    color: #7C7C7C; }
  .post img {
    width: 240px;
    height: auto;
    margin-right: 10px; }

.post-content {
  width: 100%;
  margin-top: 10px; }

.post-continue {
  float: right;
  margin: 5px 0;
  color: #D2D2D2; }

.side-bar {
  font-family: Lato, Helvetica, sans-serif;
  text-align: center; }
  .side-bar .logo {
    width: 90%;
    height: auto;
    opacity: .8;
    margin-bottom: 30px; }
  .side-bar li {
    font-size: 16px;
    margin: 0 0 30px 0;
    text-align: center;
    color: #4E4E4E; }
  .side-bar button {
    font-size: 18px;
    padding: 7px; }
  .side-bar button:hover {
    background-color: #4E4E4E;
    color: #fff; }
  .side-bar label {
    margin-top: 10px;
    font-size: 18px;
    color: #D2D2D2;
    display: block; }
  .side-bar input {
    margin: 10px 0;
    width: 100%;
    min-width: 90px;
    max-width: 190px;
    height: 30px;
    padding: 2px 4px;
    font-size: 18px;
    color: #D2D2D2;
    border: 2px solid #D2D2D2; }
  .side-bar input:focus {
    border-color: #7F7F7F;
    color: #7F7F7F; }

.media-link {
  opacity: .1;
  margin: 10px; }

.media-link:hover {
  opacity: .3; }

.page-nav {
  display: block;
  width: 100%;
  overflow: auto; }

.about {
  font-family: Lato, Helvetica, sans-serif;
  font-weight: 300;
  line-height: 20px; }
  .about nav {
    margin-bottom: 30px; }
    .about nav a {
      margin: 10px 15px;
      font-family: Lato, Helvetica, sans-serif;
      text-decoration: underline; }
  .about .about-title {
    margin: 15px 0 15px 15px; }
  .about .about-content {
    margin: 10px 0 0 25px;
    font-family: inherit; }
    .about .about-content ul {
      list-style-type: circle; }
    .about .about-content ol {
      list-style-type: decimal; }
    .about .about-content ul, .about .about-content ol {
      margin: 15px 0 10px 50px; }
    .about .about-content li {
      margin: 7px 0; }
  .about .bod {
    margin: 10px 0 0 15px;
    display: table; }
    .about .bod .cycle-4 {
      float: left;
      clear: none;
      width: 19%;
      margin-left: 0;
      margin-right: 8%;
      margin-bottom: 15px;
      display: table-cell;
      text-align: center;
      font-family: inherit; }
      .about .bod .cycle-4:nth-of-type(4n) {
        margin-right: 0;
        float: right; }
      .about .bod .cycle-4:nth-of-type(4n + 1) {
        clear: both; }
    .about .bod img {
      width: 90%;
      height: auto; }
  .about .contact {
    width: auto;
    max-width: 500px;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
    margin-top: 30px;
    text-align: center;
    font-family: inherit; }

footer {
  width: 100%;
  height: 25px;
  bottom: 0px;
  left: 0;
  display: block;
  position: absolute;
  background-color: #37474f; }

/*# sourceMappingURL=style.css.map */
